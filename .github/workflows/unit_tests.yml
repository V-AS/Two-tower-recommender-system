# .github/workflows/unit_tests.yml
name: Run Unit Tests

on:
  push:
    branches: [main]
    paths:
      - 'src/**/*.py'  # Trigger on changes to Python files in src directory
      - 'tests/unit/**/*.py'  # Also trigger when unit tests themselves change
  pull_request:
    branches: [main]
    paths:
      - 'src/**/*.py'
      - 'tests/unit/**/*.py'

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
          pip install numpy pandas torch faiss-cpu scikit-learn matplotlib
      
      - name: Run Vector Operations unit tests
        run: python -m pytest tests/unit/test_vector_operations.py -v
      
      - name: Run ANN Search unit tests
        run: python -m pytest tests/unit/test_ann_search.py -v
      
      - name: Run Data Processing unit tests
        run: python -m pytest tests/unit/test_data_processing.py -v
      
      - name: Run Neural Network unit tests
        run: python -m pytest tests/unit/test_neural_network.py -v
      
      - name: Run Embedding Generation unit tests
        run: python -m pytest tests/unit/test_embedding_generation.py -v
      
      - name: Run all tests with coverage
        run: |
          python -m pytest tests/unit/ --cov=src --cov-report=xml --cov-report=html
      
      - name: Upload XML coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report-xml
          path: coverage.xml
          retention-days: 30
      
      - name: Upload HTML coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report-html
          path: htmlcov/
          retention-days: 30
      
      - name: Generate coverage summary
        run: |
          echo "## Coverage Summary" > coverage_summary.md
          python -c "
          import xml.etree.ElementTree as ET
          tree = ET.parse('coverage.xml')
          root = tree.getroot()
          coverage = root.get('line-rate')
          coverage_pct = float(coverage) * 100
          print(f'Overall coverage: {coverage_pct:.2f}%', file=open('coverage_summary.md', 'a'))
          
          # Print module-level coverage
          print('\n| Module | Coverage |', file=open('coverage_summary.md', 'a'))
          print('|--------|----------|', file=open('coverage_summary.md', 'a'))
          for package in root.findall('.//package'):
              name = package.get('name')
              cov = float(package.get('line-rate')) * 100
              print(f'| {name} | {cov:.2f}% |', file=open('coverage_summary.md', 'a'))
          "
      
      - name: Upload coverage summary
        uses: actions/upload-artifact@v4
        with:
          name: coverage-summary
          path: coverage_summary.md
          retention-days: 30